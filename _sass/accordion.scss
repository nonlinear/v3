
.panel {
  @include reset(all);
  @include reset(shadow);


  &:hover {
    .collapse-trigger {
      .description {
      height: map-get($size, collapse);
          @media screen and (max-width: map-get($size, bp)) {
            height: 100px;
          }
    }
    &.soon:after {
      margin-top: map-get($size, soon) - map-get($size, collapse);
                @media screen and (max-width: map-get($size, bp)) {
           margin-top: map-get($size, soon) - 100px;
          }
    }
    }
  }
  .collapse-trigger[aria-expanded="true"] .description {
    height: map-get($size, collapse);
  }
  .collapse-trigger {
    border-top: solid 5px map-get($color, fg);
    @include rain($delay: $delay);
    display: block;
    &.soon {
      @include disable(link);
      ul {
        @include opacity(40);
      }
      &:after {
        content: "soon";
        float: right;
        text-transform: uppercase;
        color: map-get($color, bg);
        background-color: map-get($color, brand);
        display: block;
        @include transition;
        @include radius(50%);
        width: 50px;
        height: 50px;
        @include rotate(15);
        text-align: center;
        padding-top: 15px;
        margin-top: map-get($size, soon);
      }
    }
    &:before {
      content: "";
      display: block;
      height: 10px;
      width: 20%;
      background-color: map-get($color, fg);
      margin-top: -10px;
    }
    .description {
      display: block;
      height: 0;
      overflow: hidden;
      @include transition;
      p {
        @include highlight;

        color: map-get($color, fg);
        line-height: 130%;
      }
    }
    &:hover {
      text-decoration: none;
    }
    .title {
      display: inline-block;
         @media screen and (min-width: map-get($size, bp)) {
      background-color: map-get($color, bg);
    }
      margin: 5px 0 10px 0 !important;

      li {
        display: inline;
  @media screen and (max-width: map-get($size, bp)) {
    display: inline-block;

      background-color: map-get($color, bg);
  }
        font-size: map-get($font-size, nav);
        line-height: map-get($font-size, navLine);
        @include zebra;
      }
    }
  }
  &:first-of-type .collapse {

   @include rain($delay: $delay);
  }
  &:nth-of-type(2) .collapse-trigger {
    @include rain($delay: ($delay * 3));
    &:before {
      margin-left: (100% / 5);
    }
  }
  &:nth-of-type(3) .collapse-trigger {
    @include rain($delay: ($delay * 4));
    &:before {
      margin-left: ((100% / 5) * 2) ;
    }
  }
  &:nth-of-type(4) .collapse-trigger {
    @include rain($delay: ($delay * 5));
    &:before {
      margin-left: ((100% / 5) * 3);
    }
  }
  &:nth-of-type(5) .collapse-trigger {
    @include rain($delay: ($delay * 6));
    &:before {
      margin-left: ((100% / 5) * 4);
    }
  }
  .collapse {
   @include clearfix;
   ul {
    li {
      padding-bottom: (map-get($size, margin)/ 2);
    }
    a {
      z-index: 100;
      text-transform: uppercase;
    }
    p {
      z-index: -1;
      font-size: map-get($font-size, sig);
    }
    a, p {
      @include highlight;
    }
   }
 }
}

.status {
    @include highlight;
    font-size: map-get($font-size, sig);
    &:after {
      height: (map-get($size, margin) / 2);
    }
   }
